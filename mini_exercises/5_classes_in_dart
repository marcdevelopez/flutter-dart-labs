// NOTA IMPORTANTE:
// En un proyecto real en Dart o Flutter, lo correcto sería separar cada clase en su propio archivo
// dentro de una estructura de carpetas organizada (por ejemplo: models/, utils/, etc.).
// Sin embargo, como este es un mini proyecto educativo y estamos en una etapa temprana del curso,
// se ha decidido colocar todo en un solo archivo para facilitar la comprensión y práctica de los
// conceptos fundamentales de clases, objetos, métodos, encapsulamiento, herencia, etc.
// Esta simplificación permite enfocarnos en aprender sin complicar la estructura innecesariamente.

void main() {
    // Aquí comenzará la simulación del zoológico
}

// --------------------------- CLASES ---------------------------

// Clase base para representar un animal
class Animal {
    // Propiedades comunes a todos los animales
    String name;
    int age;

    // Propiedad privada (solo accesible dentro de esta clase)
    final String _species;

    // Constructor para inicializar las propiedades
    Animal(this.name, this.age, this._species);
    
    // Método que representa un comportamiento comun a esta clase Animal
    // Este método puede ser sobrescrito por las clases hijas
    void makeSound() {
        print('$name makes a generic animalsound.');
    }

    // Getter para acceder a la especie (no permite que se modifique directamente sin usar getter)
    String get species => _species;

    // Getter para calcular años hasta ser considerado viejo (valor arbitrario de 15)
    int get yearsUntilOld => 15 - age;


}